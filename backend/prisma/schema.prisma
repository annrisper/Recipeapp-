// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  firstname  String
  lastname   String
  email      String    @unique
  password   String
  recipes    Recipe[]
  mealPlans  MealPlan[] // Add this to link MealPlan to User
  comments   Comment[]  // Add this to link Comment to User
  favorites  Favorite[] // Add this to link Favorite to User
}

model Recipe {
  id          Int        @id @default(autoincrement())
  title       String
  description String?
  ingredients String[]
  steps       String[]
  userId      Int
  user        User       @relation(fields: [userId], references: [id])
  createdAt   DateTime   @default(now())
  mealPlans   MealPlan[] @relation("MealPlanRecipes") // Many-to-many with MealPlan
  comments    Comment[]  // Add this to link Comment to Recipe
  favorites   Favorite[] // Add this to link Favorite to Recipe
}

model MealPlan {
  id         Int       @id @default(autoincrement())
  date       DateTime
  recipes    Recipe[]  @relation("MealPlanRecipes") // Many-to-many with Recipe
  userId     Int
  user       User      @relation(fields: [userId], references: [id])
}

model Comment {
  id        Int       @id @default(autoincrement())
  content   String
  userId    Int
  recipeId  Int
  user      User      @relation(fields: [userId], references: [id])
  recipe    Recipe    @relation(fields: [recipeId], references: [id])
  createdAt DateTime  @default(now())
}

model Favorite {
  id        Int       @id @default(autoincrement())
  userId    Int
  recipeId  Int
  user      User      @relation(fields: [userId], references: [id])
  recipe    Recipe    @relation(fields: [recipeId], references: [id])
  createdAt DateTime  @default(now())

  @@unique([userId, recipeId]) // Ensure unique favorites per user and recipe
}
